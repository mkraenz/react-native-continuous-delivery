name: 'Android Build'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: release or debug
        required: false
        type: string # values: release or debug
        default: release
      publish:
        required: false
        type: boolean
        description: Publish to Appcenter
  workflow_call:
    inputs:
      environment:
        required: true
        type: string # values: release or debug
      publish:
        required: false
        type: boolean
        description: Publish to Appcenter
    secrets:
      RELEASE_KEYSTORE_BASE64:
        required: true
    #   APP_CENTER_TOKEN_ANDROID:
    #     required: true

env:
  CAPITAL_ENVIRONMENT: ${{inputs.environment == 'release' && 'Release' || 'Debug'}}

jobs:
  build-android:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install Node modules
        run: yarn ci

      - name: Make release keystore
        run: echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > ./android/app/my-upload-key.keystore

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      # Build Command
      - name: Build Android $CAPITAL_ENVIRONMENT
        run: |
          cd android && ./gradlew bundle$CAPITAL_ENVIRONMENT --no-daemon
      # Upload to Artifact
      - name: Upload Artifact
        if: ${{ inputs.environment == 'release' }}
        uses: actions/upload-artifact@v3
        with:
          name: ExampleApp.aab
          path: 'android/app/build/outputs/bundle/release/app-release.aab'

      - name: Upload to Google Play Internal Testing
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.typescriptteatimerncicd
          releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
          releaseName: v1.0.2
          inAppUpdatePriority: 2
          userFraction: 1.0
